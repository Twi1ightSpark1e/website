# Access Control Lists section, optional.
#
# Contains named addresses/subnets, used to restrict access to various site resources.
# An empty list of addresses/subnets restricts access for everyone.
acl:
  local:
    - 192.168.0.0/16
  any:
    - 0.0.0.0/0
    - ::/0
  none:

# Authentication section, optional.
#
# Contains pairs "username: password" to restrict access to public resources to authorized users.
# What can be used as a password:
#   - plaintext, will be bcrypt-ed on next server start;
#   - bcrypt hash, will be used as is.
auth:
  testuser1: testpasswd
  testuser2: helloworld

# Web server listening port, required.
port: 8081

# Directory with templates path (absolute or relative), required.
templates_path: "template/"

# Handlers section, optional.
#
# Contains configuration for various handlers. Currently supported:
#   - `fileindex`, optional;
#   - `graphviz`, optional.
#
# Fileindex handler.
#
# Displays table of files inside a directory. Hidden names are not shown but available. Options:
#   - `base_path` - absolute path - root of each endpoint, required;
#   - `hide` - an array of names that must be hidden from index, optional.
# Every endpoint has following options:
#   - `view` - list of clients that are allowed to see endpoint content. Optional, forbidden for everyone by default;
#   - `auth` - list of users that are allowed to see endpoint content. Optional, allowed for everyone by default.
#
# Graphviz handler.
#
# Receives 'dot'-compatible data on PUT requests, returns graph drawn as SVG. Every endpoint has following options:
#   - `view` - list of clients that are allowed to see endpoint content. Optional, forbidden for everyone by default;
#   - `edit` - list of clients that are allowed to perform PUT and DELETE requests. Optional, forbidden for everyone by default.
handlers:
  fileindex:
    base_path: "/mnt"
    hide:
      - "noindex"
    endpoints:
      files:
        view: any
      files-test:
        view: local
        auth:
          - testuser1
          - testuser2
      packages:
        view: any
      static:
        view: any
  graphviz:
    endpoints:
      graph:
        view: any
        edit: local

# Root content section.
#
# Contains array of cards on main page. Every card consists of following properties:
#   - `title`, required;
#   - `description`, required;
#   - `view` - list of clients that are allowed to see card. Optional, forbidden for everyone by default;
#   - `links` - an array of card links, required.
#
# Every link must contain following properties:
#   - `title`;
#   - `address`.
root_content:
  - title: "File storage"
    description: "Simple indexed file storage"
    view: any
    links:
      - title: "Link"
        address: "files/"
  - title: "Test file storage"
    description: "Testing file storage index"
    view: local
    links:
      - title: "Link"
        address: "files-test/"
  - title: "Gentoo binary host"
    description: "My own binhost with generic packages"
    view: any
    links:
      - title: "Link"
        address: "packages/"
      - title: "How to set up"
        address: "https://wiki.gentoo.org/wiki/Binary_package_guide/en#Using_binary_packages"
  - title: "Test graphviz"
    description: "Testing graphviz visualizer"
    view: any
    links:
      - title: "Link"
        address: "graph/"
